
using System;
using System.Collections.Generic;
using System.Linq;
using System.Numerics;
using System.Reflection;

using HarmonyLib;

using SandBox.GauntletUI.AutoGenerated0;

using TaleWorlds.CampaignSystem;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Encounters;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.CampaignSystem.SceneInformationPopupTypes;
using TaleWorlds.CampaignSystem.ViewModelCollection.Party;
using TaleWorlds.Core;
using TaleWorlds.Core.ViewModelCollection.Information;
using TaleWorlds.GauntletUI;
using TaleWorlds.GauntletUI.BaseTypes;
using TaleWorlds.Library;
using TaleWorlds.Localization;

// using PartyScreenGenerated = SandBox.GauntletUI.AutoGenerated0.PartyScreen__TaleWorlds_CampaignSystem_ViewModelCollection_Party_PartyVM_Dependency_14_PartyTroopTuple__InheritedPrefab;
namespace TimeLord.Patches
{
    [HarmonyPatch]
    public static class ExecutionPatches
    {
        //[HarmonyPatch(typeof(PartyScreenLogic), "GetExecutableReasonText")]
        //[HarmonyPrefix]

        //public static bool GetExecutableReasonText(ref string __result,CharacterObject character, bool isExecutable)
        //{
        //    if (isExecutable)
        //    {
        //        __result = GameTexts.FindText("str_execute_prisoner", null).ToString();
        //        return false;
        //    }
        //    if (!character.IsHero)
        //    {
        //        __result = GameTexts.FindText("str_cannot_execute_nonhero", null).ToString();
        //        return false;
        //    }
        //    __result = GameTexts.FindText("str_cannot_execute_hero", null).ToString();

        //    return false;
        //}

        [HarmonyPatch(typeof(PartyScreenLogic), "IsExecutable")]
        [HarmonyPrefix]
        public static bool IsExecutable(ref bool __result, PartyScreenLogic.TroopType troopType, CharacterObject character, PartyScreenLogic.PartyRosterSide side)
        {
            if (troopType != PartyScreenLogic.TroopType.Prisoner || side != PartyScreenLogic.PartyRosterSide.Right || !character.IsHero || character.HeroObject.Age < (float) Campaign.Current.Models.AgeModel.HeroComesOfAge || PlayerEncounter.Current != null && PlayerEncounter.Current.EncounterState != PlayerEncounterState.Begin)
            {
                __result = false;
                return false;
            }
            __result = true; //TaleWorlds.Core.FaceGen.GetMaturityTypeWithAge(character.Age) > BodyMeshMaturityType.Tween;

            return false;
        }


        //[HarmonyPatch(typeof(PartyScreenLogic), "ExecuteTroop")]
        //[HarmonyPrefix]
        //static bool ExecuteTroop(ref PartyScreenLogic __instance,ref PartyScreenData ____initialData,PartyScreenLogic.PartyCommand command)
        //{
        //    bool flag = false;
        //    if (__instance.ValidateCommand(command))
        //    {
        //        CharacterObject character = command.Character;
        //        __instance.PrisonerRosters[(int) command.RosterSide].AddToCounts(character, -1, false, 0, 0, true, -1);
        //        KillCharacterAction.ApplyByExecution(character.HeroObject, Hero.MainHero, true, false);
        //        flag = true;
        //    }
        //    if (flag)
        //    {
        //        PartyScreenLogic.PresentationUpdate updateDelegate = __instance.UpdateDelegate;
        //        if (updateDelegate != null)
        //        {
        //            updateDelegate(command);
        //        }
        //        else
        //        {
        //        }
        //        //PartyScreenLogic.PresentationUpdate presentationUpdate = __instance.Update;
        //        object eventInvoker = typeof(PartyScreenLogic).GetField(nameof(__instance.Update), BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance).GetValue(__instance);
        //        PartyScreenLogic.PresentationUpdate presentationUpdate = (PartyScreenLogic.PresentationUpdate) eventInvoker; // __instance.Update;
        //        if (presentationUpdate != null)
        //        {
        //            presentationUpdate(command);
        //        }
        //        else
        //        {
        //        }

        //        ____initialData.LeftPrisonerRoster.AddToCounts(command.Character, -1, false, 0, 0, true, -1);
        //        ____initialData.RightPrisonerRoster.AddToCounts(command.Character, -1, false, 0, 0, true, -1);
        //    }

        //    return false;
        //}


        //[HarmonyPatch(typeof(PartyScreenLogic), "ValidateCommand")]
        //[HarmonyPrefix]
        //public static bool ValidateCommand(ref bool __result,ref PartyScreenLogic __instance, PartyScreenLogic.PartyCommand command)
        //{
        //    int num;
        //    int num1;
        //    int? nullable;
        //    bool flag;
        //    CharacterObject characterObject;
        //    int? nullable1;
        //    int? nullable2;
        //    bool flag1;
        //    if (command.Code == PartyScreenLogic.PartyCommandCode.TransferTroop || command.Code == PartyScreenLogic.PartyCommandCode.TransferTroopToLeaderSlot)
        //    {
        //        CharacterObject character = command.Character;
        //        if (character == CharacterObject.PlayerCharacter)
        //        {
        //            __result = false;
        //            return false;
        //        }
        //        if (command.Type != PartyScreenLogic.TroopType.Member)
        //        {
        //            num = __instance.PrisonerRosters[(int) command.RosterSide].FindIndexOfTroop(character);
        //            if (num == -1)
        //            {
        //                __result = false;
        //                return false;
        //            }
        //            __result = __instance.PrisonerRosters[(int) command.RosterSide].GetElementNumber(num) >= command.TotalNumber;
        //            return false;
        //        }
        //        num = __instance.MemberRosters[(int) command.RosterSide].FindIndexOfTroop(character);
        //        __result = (num == -1 ? false : __instance.MemberRosters[(int) command.RosterSide].GetElementNumber(num) >= command.TotalNumber) & (command.RosterSide != PartyScreenLogic.PartyRosterSide.Left ? true : command.Index != 0);
        //        return false;
        //    }
        //    if (command.Code == PartyScreenLogic.PartyCommandCode.ShiftTroop)
        //    {
        //        CharacterObject character1 = command.Character;
        //        if (character1 == __instance.LeftPartyLeader || character1 == __instance.RightPartyLeader)
        //        {
        //            flag1 = false;
        //        }
        //        else if (command.RosterSide == PartyScreenLogic.PartyRosterSide.Left && (__instance.LeftPartyLeader == null || command.Index != 0))
        //        {
        //            flag1 = true;
        //        }
        //        else if (command.RosterSide != PartyScreenLogic.PartyRosterSide.Right)
        //        {
        //            flag1 = false;
        //        }
        //        else
        //        {
        //            flag1 = (__instance.RightPartyLeader == null ? true : command.Index != 0);
        //        }
        //        if (!flag1)
        //        {
        //            __result = false;
        //            return false;
        //        }
        //        if (command.Type == PartyScreenLogic.TroopType.Member)
        //        {
        //            num1 = __instance.MemberRosters[(int) command.RosterSide].FindIndexOfTroop(character1);
        //            if (num1 == -1)
        //            {
        //                __result = false;
        //                return false;
        //            }
        //            __result = num1 != command.Index;
        //            return false;
        //        }
        //        num1 = __instance.PrisonerRosters[(int) command.RosterSide].FindIndexOfTroop(character1);
        //        if (num1 == -1)
        //        {
        //            __result =false;
        //            return false;
        //        }
        //        __result = num1 != command.Index;
        //        return false;
        //    }
        //    if (command.Code == PartyScreenLogic.PartyCommandCode.TransferPartyLeaderTroop)
        //    {
        //        CharacterObject characterObject1 = command.Character;
        //        BasicCharacterObject playerTroop = Game.Current.PlayerTroop;
        //        __result = false;
        //        return false;
        //    }
        //    if (command.Code != PartyScreenLogic.PartyCommandCode.UpgradeTroop)
        //    {
        //        if (command.Code == PartyScreenLogic.PartyCommandCode.RecruitTroop)
        //        {
        //            __result = __instance.IsPrisonerRecruitable(command.Type, command.Character, command.RosterSide);
        //            return false;
        //        }
        //        if (command.Code != PartyScreenLogic.PartyCommandCode.ExecuteTroop)
        //        {
        //            throw new MBUnknownTypeException("Unknown command type in ValidateCommand.");
        //        }
        //        __result = __instance.IsExecutable(command.Type, command.Character, command.RosterSide);
        //        return false;
        //    }
        //    CharacterObject character2 = command.Character;
        //    int num2 = __instance.MemberRosters[(int) command.RosterSide].FindIndexOfTroop(character2);
        //    if (num2 == -1 || __instance.MemberRosters[(int) command.RosterSide].GetElementNumber(num2) < command.TotalNumber || character2.UpgradeTargets.Length == 0)
        //    {
        //        __result = false;
        //        return false;
        //    }
        //    if (command.UpgradeTarget >= (int) character2.UpgradeTargets.Length)
        //    {
        //        MBInformationManager.AddQuickInformation(new TextObject("{=kaQ7DsW3}Character does not have upgrade target.", null), 0, null, "");
        //        __result = false;
        //        return false;
        //    }
        //    CharacterObject upgradeTargets = character2.UpgradeTargets[command.UpgradeTarget];
        //    int upgradeXpCost = character2.GetUpgradeXpCost(PartyBase.MainParty, command.UpgradeTarget);
        //    int upgradeGoldCost = character2.GetUpgradeGoldCost(PartyBase.MainParty, command.UpgradeTarget);
        //    if (__instance.MemberRosters[(int) command.RosterSide].GetElementXp(num2) < upgradeXpCost * command.TotalNumber)
        //    {
        //        MBInformationManager.AddQuickInformation(new TextObject("{=m1bIfPf1}Character does not have enough experience for upgrade.", null), 0, null, "");
        //        __result = false;
        //        return false;
        //    }
        //    characterObject = (command.RosterSide == PartyScreenLogic.PartyRosterSide.Left ? __instance.LeftPartyLeader : __instance.RightPartyLeader);
        //    if (characterObject != null)
        //    {
        //        nullable1 = new int?(characterObject.HeroObject.Gold);
        //    }
        //    else
        //    {
        //        nullable = null;
        //        nullable1 = nullable;
        //    }
        //    int? nullable3 = nullable1;
        //    int partyGoldChangeAmount = __instance.CurrentData.PartyGoldChangeAmount;
        //    if (nullable3.HasValue)
        //    {
        //        nullable2 = new int?(nullable3.GetValueOrDefault() + partyGoldChangeAmount);
        //    }
        //    else
        //    {
        //        nullable = null;
        //        nullable2 = nullable;
        //    }
        //    int? nullable4 = nullable2;
        //    int totalNumber = upgradeGoldCost * command.TotalNumber;
        //    if (!(nullable4.GetValueOrDefault() >= totalNumber & nullable4.HasValue))
        //    {
        //        MBTextManager.SetTextVariable("VALUE", upgradeGoldCost);
        //        MBInformationManager.AddQuickInformation(GameTexts.FindText("str_gold_needed_for_upgrade", null), 0, null, "");
        //        __result = false;
        //        return false;
        //    }
        //    if (upgradeTargets.UpgradeRequiresItemFromCategory == null)
        //    {
        //        __result = true;
        //        return false;
        //    }
        //    using (IEnumerator<ItemRosterElement> enumerator = __instance.RightOwnerParty.ItemRoster.GetEnumerator())
        //    {
        //        while (enumerator.MoveNext())
        //        {
        //            if (enumerator.Current.EquipmentElement.Item.ItemCategory != upgradeTargets.UpgradeRequiresItemFromCategory)
        //            {
        //                continue;
        //            }
        //            flag = true;
        //            __result = flag;
        //            return false;
        //        }
        //        MBTextManager.SetTextVariable("REQUIRED_ITEM", upgradeTargets.UpgradeRequiresItemFromCategory.GetName(), false);
        //        MBInformationManager.AddQuickInformation(GameTexts.FindText("str_item_needed_for_upgrade", null), 0, null, "");
        //        __result = false;
        //        return false;
        //    }
        //    __result = flag;
        //    return false;
        //}

        [HarmonyPatch(typeof(PartyVM),"ExecuteExecution")]
        [HarmonyPrefix]

        public static bool ExecuteExecution(ref PartyVM __instance)
        {
            if (__instance.PartyScreenLogic.IsExecutable(__instance.CurrentCharacter.Type, __instance.CurrentCharacter.Character, __instance.CurrentCharacter.Side))
            {
                PartyScreenLogic.PartyCommand partyCommand = new PartyScreenLogic.PartyCommand();
                partyCommand.FillForExecuteTroop(__instance.CurrentCharacter.Side, __instance.CurrentCharacter.Type, __instance.CurrentCharacter.Character);
                __instance.PartyScreenLogic.AddCommand(partyCommand);
            }
            return false;
        }

        //[HarmonyPatch(typeof(PartyVM), "ExecuteTroop")]
        //[HarmonyPrefix]
        //private static bool ExecuteTroop(ref PartyVM __instance, PartyScreenLogic.PartyCommand command)
        //{
        //    MBBindingList<PartyCharacterVM> partyCharacterVMs;
        //    MBBindingList<PartyCharacterVM> partyCharacterVMs1;
        //    __instance.PartyScreenLogic.MemberRosters[(int) command.RosterSide].FindIndexOfTroop(command.Character);
        //    __instance.GetPartyCharacterVMList(out partyCharacterVMs, command.RosterSide, PartyScreenLogic.TroopType.Member);
        //    __instance.GetPartyCharacterVMList(out partyCharacterVMs1, command.RosterSide, PartyScreenLogic.TroopType.Prisoner);
        //    int num = -1;
        //    if (command.Type != PartyScreenLogic.TroopType.Prisoner)
        //    {
        //        Debug.FailedAssert("Players can only execute prisoners", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem.ViewModelCollection\\Party\\PartyVM.cs", "ExecuteTroop", 1049);
        //    }
        //    else
        //    {
        //        num = __instance.PartyScreenLogic.PrisonerRosters[(int) __instance.CurrentCharacter.Side].FindIndexOfTroop(__instance.CurrentCharacter.Character);
        //        if (num >= 0)
        //        {
        //            __instance._currentCharacter.Troop = __instance.PartyScreenLogic.PrisonerRosters[(int) __instance.CurrentCharacter.Side].GetElementCopyAtIndex(num);
        //        }
        //    }
        //    if (num >= 0)
        //    {
        //        Debug.FailedAssert("The prisoner should have been removed from the prisoner roster after execution", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem.ViewModelCollection\\Party\\PartyVM.cs", "ExecuteTroop", 1060);
        //    }
        //    else
        //    {
        //        partyCharacterVMs1.Remove(__instance.CurrentCharacter);
        //        __instance.CurrentCharacter = partyCharacterVMs1.FirstOrDefault<PartyCharacterVM>() ?? partyCharacterVMs.FirstOrDefault<PartyCharacterVM>();
        //        MBInformationManager.HideInformations();
        //    }
        //    __instance.RefreshTopInformation();
        //    __instance.RefreshPartyInformation();
        //}


        [HarmonyPatch(typeof(PartyCharacterVM), "ExecuteExecuteTroop")]
        [HarmonyPrefix]
        public static bool ExecuteExecuteTroop(ref PartyCharacterVM __instance,ref PartyVM ____partyVm)
        {
            var _partyVm = ____partyVm;
            if (__instance.IsExecutable)
            {
                if (TaleWorlds.Core.FaceGen.GetMaturityTypeWithAge(__instance.Character.HeroObject.BodyProperties.Age) <= BodyMeshMaturityType.Tween)
                {
                    //return false;
                }
                MBInformationManager.ShowSceneNotification(HeroExecutionSceneNotificationData.CreateForPlayerExecutingHero(__instance.Character.HeroObject, () => _partyVm.ExecuteExecution(), SceneNotificationData.RelevantContextType.Any));
            }
            return false;
        }


        //[HarmonyPatch(typeof(PartyScreenGenerated), "RefreshDataSource_datasource_Root_ExecutePrisonerHint")]
        //[HarmonyPrefix]

        //private static void RefreshDataSource_datasource_Root_ExecutePrisonerHint(ref PartyScreenGenerated __instance, BasicTooltipViewModel newDataSource)
        //{
        //    return;
        //}


        //[HarmonyPatch(typeof(PartyScreenGenerated), "PropertyChangedListenerOf_widget_0_0_2_0_4_1")]
        //[HarmonyPrefix]

        //private static void PropertyChangedListenerOf_widget_0_0_2_0_4_1(ref PartyScreenGenerated __instance, PropertyOwnerObject propertyOwnerObject, string propertyName, object value)
        //{
        //    //if (propertyName != "IsEnabled")
        //    //{
        //    //    return;
        //    //}
        //    //this._datasource_Root.IsExecutable = this._widget_0_0_2_0_4_1.IsEnabled;
        //    return;
        //}


        //[HarmonyPatch(typeof(PartyScreenGenerated), "HandleViewModelPropertyChangeOf_datasource_Root")]
        //[HarmonyPrefix]
        //private static void HandleViewModelPropertyChangeOf_datasource_Root(ref PartyScreenGenerated __instance, string propertyName)
        //{
        //    //if (propertyName == "TradeData")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TradeData(this._datasource_Root.TradeData);
        //    //    return;
        //    //}
        //    //if (propertyName == "TroopConformityTooltip")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TroopConformityTooltip(this._datasource_Root.TroopConformityTooltip);
        //    //    return;
        //    //}
        //    //if (propertyName == "RecruitPrisonerHint")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_RecruitPrisonerHint(this._datasource_Root.RecruitPrisonerHint);
        //    //    return;
        //    //}
        //    //if (propertyName == "ExecutePrisonerHint")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_ExecutePrisonerHint(this._datasource_Root.ExecutePrisonerHint);
        //    //    return;
        //    //}
        //    //if (propertyName == "TroopXPTooltip")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TroopXPTooltip(this._datasource_Root.TroopXPTooltip);
        //    //    return;
        //    //}
        //    //if (propertyName == "Upgrades")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_Upgrades(this._datasource_Root.Upgrades);
        //    //    return;
        //    //}
        //    //if (propertyName == "TransferHint")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TransferHint(this._datasource_Root.TransferHint);
        //    //    return;
        //    //}
        //    //if (propertyName == "Code")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_Code(this._datasource_Root.Code);
        //    //    return;
        //    //}
        //    //if (propertyName == "TierIconData")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TierIconData(this._datasource_Root.TierIconData);
        //    //    return;
        //    //}
        //    //if (propertyName == "TypeIconData")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_TypeIconData(this._datasource_Root.TypeIconData);
        //    //    return;
        //    //}
        //    //if (propertyName == "HeroHealthHint")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_HeroHealthHint(this._datasource_Root.HeroHealthHint);
        //    //    return;
        //    //}
        //    //if (propertyName == "LockHint")
        //    //{
        //    //    this.RefreshDataSource_datasource_Root_LockHint(this._datasource_Root.LockHint);
        //    //    return;
        //    //}
        //    //if (propertyName == "TroopID")
        //    //{
        //    //    this._widget.CharacterID = this._datasource_Root.TroopID;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsMainHero")
        //    //{
        //    //    this._widget.IsMainHero = this._datasource_Root.IsMainHero;
        //    //    this._widget_0.IsHidden = this._datasource_Root.IsMainHero;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsPrisoner")
        //    //{
        //    //    this._widget.IsPrisoner = this._datasource_Root.IsPrisoner;
        //    //    this._widget_0_0_2_0_2.IsVisible = this._datasource_Root.IsPrisoner;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsTroopTransferrable")
        //    //{
        //    //    this._widget.IsTransferable = this._datasource_Root.IsTroopTransferrable;
        //    //    this._widget_2_0.IsVisible = this._datasource_Root.IsTroopTransferrable;
        //    //    this._widget_2_7.IsVisible = this._datasource_Root.IsTroopTransferrable;
        //    //    return;
        //    //}
        //    //if (propertyName == "TransferAmount")
        //    //{
        //    //    this._widget.TransferAmount = this._datasource_Root.TransferAmount;
        //    //    return;
        //    //}
        //    //if (propertyName == "CanTalk")
        //    //{
        //    //    this._widget_0_0_2_0_1.IsVisible = this._datasource_Root.CanTalk;
        //    //    return;
        //    //}
        //    //if (propertyName == "CurrentConformity")
        //    //{
        //    //    this._widget_0_0_2_0_2.CurrentAmount = this._datasource_Root.CurrentConformity;
        //    //    this._widget_0_0_2_0_2.InitialAmount = this._datasource_Root.CurrentConformity;
        //    //    return;
        //    //}
        //    //if (propertyName == "MaxConformity")
        //    //{
        //    //    this._widget_0_0_2_0_2.MaxAmount = this._datasource_Root.MaxConformity;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsPrisonerOfPlayer")
        //    //{
        //    //    this._widget_0_0_2_0_3.IsVisible = this._datasource_Root.IsPrisonerOfPlayer;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsTroopRecruitable")
        //    //{
        //    //    this._widget_0_0_2_0_3_1.IsEnabled = this._datasource_Root.IsTroopRecruitable;
        //    //    this._widget_2_4.IsVisible = this._datasource_Root.IsTroopRecruitable;
        //    //    this._widget_2_4_0.IsVisible = this._datasource_Root.IsTroopRecruitable;
        //    //    this._widget_2_4_1.IsVisible = this._datasource_Root.IsTroopRecruitable;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsHeroPrisonerOfPlayer")
        //    //{
        //    //    this._widget_0_0_2_0_4.IsVisible = this._datasource_Root.IsHeroPrisonerOfPlayer;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsExecutable")
        //    //{
        //    //    this._widget_0_0_2_0_4_1.IsEnabled = this._datasource_Root.IsExecutable;
        //    //    return;
        //    //}
        //    //if (propertyName == "CurrentXP")
        //    //{
        //    //    this._widget_0_0_2_0_5.InitialAmount = this._datasource_Root.CurrentXP;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsUpgradableTroop")
        //    //{
        //    //    this._widget_0_0_2_0_5.IsVisible = this._datasource_Root.IsUpgradableTroop;
        //    //    this._widget_0_0_2_0_6.IsVisible = this._datasource_Root.IsUpgradableTroop;
        //    //    return;
        //    //}
        //    //if (propertyName == "MaxXP")
        //    //{
        //    //    this._widget_0_0_2_0_5.MaxAmount = this._datasource_Root.MaxXP;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsTransferButtonHiglighted")
        //    //{
        //    //    this._widget_2_0_1.IsHighlightEnabled = this._datasource_Root.IsTransferButtonHiglighted;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsHero")
        //    //{
        //    //    this._widget_2_2.IsHidden = this._datasource_Root.IsHero;
        //    //    this._widget_2_6.IsVisible = this._datasource_Root.IsHero;
        //    //    return;
        //    //}
        //    //if (propertyName == "TroopNum")
        //    //{
        //    //    this._widget_2_2.Text = this._datasource_Root.TroopNum;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsTroopUpgradable")
        //    //{
        //    //    this._widget_2_3.IsVisible = this._datasource_Root.IsTroopUpgradable;
        //    //    this._widget_2_3_0.IsVisible = this._datasource_Root.IsTroopUpgradable;
        //    //    this._widget_2_3_1.IsVisible = this._datasource_Root.IsTroopUpgradable;
        //    //    return;
        //    //}
        //    //if (propertyName == "NumOfUpgradeableTroops")
        //    //{
        //    //    this._widget_2_3_1.IntText = this._datasource_Root.NumOfUpgradeableTroops;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsUpgradeButtonsHiglighted")
        //    //{
        //    //    return;
        //    //}
        //    //if (propertyName == "NumOfRecruitablePrisoners")
        //    //{
        //    //    this._widget_2_4_1.IntText = this._datasource_Root.NumOfRecruitablePrisoners;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsRecruitButtonsHiglighted")
        //    //{
        //    //    this._widget_2_4_2.IsHighlightEnabled = this._datasource_Root.IsRecruitButtonsHiglighted;
        //    //    return;
        //    //}
        //    //if (propertyName == "Name")
        //    //{
        //    //    this._widget_2_5.Text = this._datasource_Root.Name;
        //    //    return;
        //    //}
        //    //if (propertyName == "HeroHealth")
        //    //{
        //    //    this._widget_2_6_1.Health = this._datasource_Root.HeroHealth;
        //    //    return;
        //    //}
        //    //if (propertyName == "IsHeroWounded")
        //    //{
        //    //    this._widget_2_6_1.IsWounded = this._datasource_Root.IsHeroWounded;
        //    //    return;
        //    //}
        //    //if (propertyName != "IsLocked")
        //    //{
        //    //    return;
        //    //}
        //    //this._widget_2_7.IsSelected = this._datasource_Root.IsLocked;
        //    return;
        //}



        //[HarmonyPatch(typeof(EventManager), "AnyWidgetsAt")]
        //[HarmonyPrefix]
        //internal static bool AnyWidgetsAt(ref bool __result,Widget widget, Vector2 position)
        //{
        //    if (widget.IsEnabled && widget.IsVisible)
        //    {
        //        if (!widget.DoNotAcceptEvents && EventManagerReflection.IsPointInsideMeasuredArea(widget, position))
        //        {
        //            __result = true;
        //            return false;
        //        }
        //        if (!widget.DoNotPassEventsToChildren)
        //        {
        //            for (int i = widget.ChildCount - 1; i >= 0; i--)
        //            {
        //                Widget child = widget.GetChild(i);
        //                Vector2 vector2 = new Vector2(position.X - widget.Left, position.Y - widget.Top);
        //                if (!child.IsHidden && !child.IsDisabled && EventManagerReflection.AnyWidgetsAt(child, vector2))
        //                {
        //                    __result = true;
        //                    return false;
        //                }
        //            }
        //        }
        //    }
        //    __result = false;
        //    return false;
        //}

        //[HarmonyPatch(typeof(ButtonWidget), "OnMousePressed")]
        //[HarmonyPrefix]
        //static void OnMousePressed(ref ButtonWidget __instance)
        //{
        //    //if (this._clickState == ButtonWidget.ButtonClickState.None)
        //    //{
        //    //    this._clickState = ButtonWidget.ButtonClickState.HandlingClick;
        //    //    base.IsPressed = true;
        //    //    if (!base.DoNotPassEventsToChildren)
        //    //    {
        //    //        for (int i = 0; i < base.ChildCount; i++)
        //    //        {
        //    //            Widget child = base.GetChild(i);
        //    //            if (child != null)
        //    //            {
        //    //                child.IsPressed = true;
        //    //            }
        //    //        }
        //    //    }
        //    //}
        //}


        //[HarmonyPatch(typeof(ButtonWidget), "OnMouseReleased")]
        //[HarmonyPrefix]
        //static void OnMouseReleased(ref ButtonWidget __instance)
        //{
        //    //if (this._clickState == ButtonWidget.ButtonClickState.HandlingClick)
        //    //{
        //    //    this._clickState = ButtonWidget.ButtonClickState.None;
        //    //    base.IsPressed = false;
        //    //    if (!base.DoNotPassEventsToChildren)
        //    //    {
        //    //        for (int i = 0; i < base.ChildCount; i++)
        //    //        {
        //    //            Widget child = base.GetChild(i);
        //    //            if (child != null)
        //    //            {
        //    //                child.IsPressed = false;
        //    //            }
        //    //        }
        //    //    }
        //    //    if (this.IsPointInsideMeasuredAreaAndCheckIfVisible())
        //    //    {
        //    //        this.HandleClick();
        //    //    }
        //    //}
        //}

        //[HarmonyPatch(typeof(ButtonWidget), "OnMouseAlternatePressed")]
        //[HarmonyPrefix]
        //static void OnMouseAlternatePressed(ref ButtonWidget __instance)
        //{
        //    //if (this._clickState == ButtonWidget.ButtonClickState.None)
        //    //{
        //    //    this._clickState = ButtonWidget.ButtonClickState.HandlingAlternateClick;
        //    //    base.IsPressed = true;
        //    //    if (!base.DoNotPassEventsToChildren)
        //    //    {
        //    //        for (int i = 0; i < base.ChildCount; i++)
        //    //        {
        //    //            Widget child = base.GetChild(i);
        //    //            if (child != null)
        //    //            {
        //    //                child.IsPressed = true;
        //    //            }
        //    //        }
        //    //    }
        //    //}
        //}

        //[HarmonyPatch(typeof(ButtonWidget), "OnMouseAlternateReleased")]
        //[HarmonyPrefix]
        //static void OnMouseAlternateReleased(ref ButtonWidget __instance)
        //{
        //    //if (this._clickState == ButtonWidget.ButtonClickState.HandlingAlternateClick)
        //    //{
        //    //    this._clickState = ButtonWidget.ButtonClickState.None;
        //    //    base.IsPressed = false;
        //    //    if (!base.DoNotPassEventsToChildren)
        //    //    {
        //    //        for (int i = 0; i < base.ChildCount; i++)
        //    //        {
        //    //            Widget child = base.GetChild(i);
        //    //            if (child != null)
        //    //            {
        //    //                child.IsPressed = false;
        //    //            }
        //    //        }
        //    //    }
        //    //    if (this.IsPointInsideMeasuredAreaAndCheckIfVisible())
        //    //    {
        //    //        this.HandleAlternateClick();
        //    //    }
        //    //}
        //}



    }

    //public static class EventManagerReflection
    //{
    //    public static bool AnyWidgetsAt(Widget widget, Vector2 position)
    //    {
    //        bool result = false;
    //        ExecutionPatches.AnyWidgetsAt(ref result, widget, position);
    //        return result;
    //        //return (bool) AccessTools.Method(typeof(EventManager), nameof(AnyWidgetsAt)).Invoke(null, new object[] { widget, position });
    //    }

    //    public static bool IsPointInsideMeasuredArea(Widget w, Vector2 p)
    //    {
    //        if (w.Left > p.X || p.X > w.Right || w.Top > p.Y)
    //        {
    //            return false;
    //        }
    //        return p.Y <= w.Bottom;
    //        //return (bool) AccessTools.Method(typeof(EventManager), nameof(IsPointInsideMeasuredArea)).Invoke(null, new object[] { w, p });
    //    }

    //    internal static void Raise<TEventArgs>(this object source, string eventName, TEventArgs eventArgs) where TEventArgs : EventArgs
    //    {
    //        var eventDelegate = (MulticastDelegate) source.GetType().GetField(eventName, BindingFlags.Instance | BindingFlags.NonPublic).GetValue(source);
    //        if (eventDelegate != null)
    //        {
    //            foreach (var handler in eventDelegate.GetInvocationList())
    //            {
    //                handler.Method.Invoke(handler.Target, new object[] { source, eventArgs });
    //            }
    //        }
    //    }
    //}
}
